/**
 * Application of Principles of Programming
 * Assignment Template 2021 - Javascript
 * @author Tim Orman
 */

//Joke Event Handlers

document.getElementById("listJokes").addEventListener('click', populateEntry);

document.getElementById("btnDeleteJoke").addEventListener('click', deleteJoke);
document.getElementById("btnAddJoke").addEventListener('click', addEntry);

document.getElementById("btnUploadJokes").addEventListener('click', uploadJoke);

//Initialise Joke List
document.addEventListener("DOMContentLoaded", function(){
    console.log("calling getJoke")
    getJokeEntries();
});

//Utility Functions
function getUniqueKey(){
    return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>
        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
    );
};


/**
 * Joke Stuff
 */


/**
 * getJokeEntries() - Get list of joke entries
 *
 * This function obtains the stored jokes inside the local
 * * file jokes.json. It stores it to the website DOM and 
 * * only displays the joke in the big list of jokes.
 */
function getJokeEntries(){
  let xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) { 
      let jokeResult = JSON.parse(this.responseText);
      
      let jokeList = "";
      for (let item of jokeResult.jokes) {
        jokeList = jokeList + "<li dat='" + String(item.date) +  "' title='" + String(item.title) + "' joke='" + String(item.joke) + "' id='jokeEntry" + jokeResult.jokes.indexOf(item) + "'>" + String(item.joke) + "</li>";}
     
    document.getElementById("listJokes").innerHTML = jokeList;
    
    }
    else{
      console.log("xhttp request problem occurred")
    }
  }
  xhttp.open("GET", "api/jokes", true);
  xhttp.send();
}

/**
 * clearEntry()
 *
 * This function simply clears
 * * the selected joke fields on the website.
 *
 */
function clearEntry(){
    document.getElementById("idEntry").value = "";
    document.getElementById("dateEntry").value = "";
    document.getElementById("titlEntry").value = "";
    document.getElementById("jokeDesc").value = "";
}

/**
 * populateEntry(item)
 *
 * This function populates the selected joke fields
 * * on the website once a joke is clicked on. This
 * * is done by clearing what is already there and
 * * inserting all the data into its relevant spot.
 * @param Item
 */
function populateEntry(e){
    //clear old entry
    clearEntry()
    let itemIndex = e.target.id
    let itemDate = e.target.getAttribute("dat");
    let itemTitle = e.target.getAttribute("title");
    let itemJoke = e.target.getAttribute("joke");
    document.getElementById("idEntry").value = itemIndex;
    document.getElementById("dateEntry").value = itemDate;
    document.getElementById("titlEntry").value = itemTitle;
    document.getElementById("jokeDesc").value = itemJoke;
}

/**
 * addEntry() - add a joke entry
 *
 * This functions adds a brand new joke to the
 * * website DOM, it requires the inputs
 * * of the joke title and the joke itself,
 * * the ID and date are auto-generated by
 * * the program.
 */
function addEntry(){
  let uid = getUniqueKey();
  console.log("uid: " + uid)
  const dat = new Date();
  let newDate = dat.getDate() + "/" + (dat.getMonth()+1) + "/" + dat.getFullYear();
  console.log("date: " + newDate);
  let newTitle = document.getElementById("titleAdd").value;
  let newJoke = document.getElementById("jokeAdd").value;
  if(newTitle == "" || newJoke == ""){
    alert("Please enter values in the title and the joke inputs.")
  }else{
    //create new li item
    let newEntry = document.createElement('li');
    newEntry.id = uid;
    newEntry.setAttribute("dat", newDate)
    newEntry.setAttribute("title", newTitle);
    newEntry.setAttribute("joke", newJoke);
    newEntry.innerText = newJoke;
    document.getElementById("listJokes").appendChild(newEntry)
    alert("Joke entry added to clientside list. Upload to save the list.")
  }
}

/**
 * deleteJoke()
 *
 * This function deletes a joke from
 * * the website DOM.
 */
function deleteJoke(){
  let idToDelete = document.getElementById("idEntry").value; 
  if(idToDelete != ""){
    document.getElementById(idToDelete).remove(); 
    //remove deleted details from selected entry boxes
    clearEntry()
    alert("Joke entry deleted on clientside. Upload to save changes.")
  } else {
    alert("Please select an entry to delete.")
  }
}

/**
 * uploadJoke()
 *
 * This function uploads the data stored
 * * in the DOM of the website and places
 * * it inside the local JSON file.
 */
function uploadJoke(){
  //get list 
  let uploadList = document.getElementById("listJokes");
  var entriesList = uploadList.getElementsByTagName("li")
  // make object to convert to JSON
  let uploadObject = {};
  uploadObject.jokes = [];
  //list items and put into an array of objects
  for (let i = 0; i < entriesList.length ; i++){
    let objEntry = {}
    objEntry.date = entriesList[i].getAttribute("dat");
    objEntry.title = entriesList[i].getAttribute("title");
    objEntry.joke = entriesList[i].getAttribute("joke");
    uploadObject.jokes.push(objEntry);
  }

  //convert object to JSON and put to api
  let xhttp = new XMLHttpRequest();
  let url = "/api/jokes"
  
    xhttp.onreadystatechange = function() {
      let strResponse = "Error: no response";
      if (this.readyState == 4 && this.status == 200) {
        strResponse = JSON.parse(this.responseText);
        alert(strResponse.message)
      }
      
    };
    xhttp.open("PUT", url, true);
    // Converting JSON data to string
    var data = JSON.stringify(uploadObject)
    // Set the request header i.e. which type of content you are sending
    xhttp.setRequestHeader("Content-Type", "application/json");
    //send it
    xhttp.send(data);
}

/**
 * randomJoke()
 *
 * This function generates a random joke
 * * by importing the data from the local
 * * jokes.json file. It will generate
 * * a random number according to the
 * * number of jokes in the file and 
 * * pick one of those jokes.
 */
function randomJoke() {
  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
      //parse server data into object
      let jokeResult = JSON.parse(xhttp.responseText);
      //create empty array to hold data
      let jokeArray = [];
      //iterate through object and place each joke in array subscripts
      for (let item of jokeResult.jokes) {
        jokeArray.push(String(item.joke));
      }
      //generate a random number based on the length of the joke array
      var randomJoke = Math.floor(Math.random() * jokeArray.length);
      //display the random joke
      document.getElementById("randomJoke").innerHTML = jokeArray[randomJoke];
    }
  };
  xhttp.open("GET", "api/jokes", true);
  xhttp.send();
}